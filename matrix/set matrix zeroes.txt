
TC : O((N*M)*(N + M)) + O(N*M), 

SC: O(1)


public class Solution {
    public static ArrayList<ArrayList<Integer>> zeroMatrix(
        ArrayList<ArrayList<Integer>> matrix, Integer n, Integer m) {
    	// Write your code here.

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix.get(i).get(j)==0){
                    markRow(matrix,n,m,i);
                    markcol(matrix,n,m,j);

                }
            }
        }

         for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (matrix.get(i).get(j) == -1) {
                    matrix.get(i).set(j, 0);
                }
            }
        }
        return matrix;
    }

    public static void markRow(ArrayList<ArrayList<Integer>> matrix, int n, int m , int i){

         for (int j = 0; j < m; j++) {
            if (matrix.get(i).get(j) != 0) {
                matrix.get(i).set(j, -1);
            }
        }
    }

     public static void markcol(ArrayList<ArrayList<Integer>> matrix, int n, int m , int j){

         for (int i = 0; i < n; i++) {
            if (matrix.get(i).get(j) != 0) {
                matrix.get(i).set(j, -1);
            }
        }
    }
}    
	

	
	
	tc: o(mn) sc: o(m+n)
	
	public void setZeroes(int[][] matrix) {
         
  int[] row = new int[matrix.length];
  int[] column = new int[matrix[0].length];

        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                if (matrix[i][j] == 0) {
                    row[i] = -1;
                    column[j] = -1;
                }
            }
        }

        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                if (row[i] == -1 || column[j] == -1) {
                    matrix[i][j] = 0;
                }
            }
        }
        
    }
	
	
	
//M-2

tc: o(mn) sc: o(1)

 public void setZeroes(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;

        boolean firstrowhaszero=false;
        boolean firstcolumnhaszero=false;

        for(int j=0;j<n;j++){
            if(matrix[0][j]==0){
                firstrowhaszero = true;
                break;
            }
        }

          for(int i=0;i<m;i++){
            if(matrix[i][0]==0){
                firstcolumnhaszero = true;
                break;
            }
        }

        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){

                if(matrix[i][j]==0){
                    matrix[i][0]=0;
                    matrix[0][j]=0;
                }
            }
        }

        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){

                if(matrix[i][0] == 0 || matrix[0][j] ==0 ){
                    matrix[i][j]=0;
                }
            }
        }

        if(firstrowhaszero){

       for(int j=0;j<n;j++){
        matrix[0][j]=0;
        }

        }

        if(firstcolumnhaszero){
            
       for(int i=0;i<m;i++){
        matrix[i][0]=0;
        }

        }