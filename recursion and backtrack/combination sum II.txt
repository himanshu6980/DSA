Input: candidates = [10,1,2,7,6,1,5], target = 8
Output: 
[
[1,1,6],
[1,2,5],
[1,7],
[2,6]
]

Input: candidates = [2,5,2,1,2], target = 5
Output: 
[
[1,2,2],
[5]
]
Each number in candidates may only be used once in the combination

class Solution {
     List<List<Integer>> ans = new ArrayList<>();
    public List<List<Integer>> combinationSum2(int[] nums, int target) {
        List<Integer> res = new ArrayList<>();
        Arrays.sort(nums);
        f(0 , nums , res,target);

        return ans;
    }

       void f(int ind , int[] nums , List<Integer> res,int sum){

       if(sum==0){
             ans.add(new ArrayList<>(res));
             return ;
       }

        if(sum<0 || ind>=nums.length){
            return ;
        }

        res.add(nums[ind]);
        f(ind+1,nums,res,sum-nums[ind]); 
        res.remove(res.size()-1);

        while(ind+1<nums.length && nums[ind]==nums[ind+1]){
            ind++;
        }
        f(ind+1,nums,res,sum);
    }
}