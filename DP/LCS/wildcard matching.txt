f(i,j)  -> i -> index of pattern j -> index of stringtomatch

tc: o(n*M) sc: o(n*m)+o(n+m)


public boolean isMatch(String s, String p) {
        int n = p.length();
        int m = s.length();
      int[][] dp = new int[n][m];
        for (int[] row: dp) {
            Arrays.fill(row, -1);
        }
        return f(n - 1, m - 1, p, s,dp);
    }

    boolean f(int i , int j , String p , String s , int[][] dp){

        if (i < 0 && j < 0) return true; //both exhaust
        
        if (i < 0 && j >= 0) return false;  //pne exhaust
        
        if (j < 0 && i >= 0) {  //if s is empty and p is all star (***)
            for (int k = 0; k <= i; k++) {
                if (p.charAt(k) != '*') {
                    return false;
                }
            }
            return true;
        }
          if (dp[i][j] != -1) {
            return dp[i][j] == 1 ? true : false;
        }
        
        // If match found or '?' is found 
        if (p.charAt(i) == s.charAt(j) || p.charAt(i) == '?') {
            boolean flag = f(i - 1, j - 1, p, s, dp);
            dp[i][j] = (flag == true) ? 1 : 0;
            
            return flag;
        }
        
        // if it is a '*'
        if (p.charAt(i) == '*') {
            boolean flag = f (i - 1, j, p, s, dp) || f (i, j - 1, p, s, dp);  // 0 len + more than zero length
            dp[i][j] = (flag == true) ? 1 : 0;
            
            return flag;
        }      
        // No match found
        return false;
    }
	
	
	
//tabulation: 

   int n = p.length();
        int m = s.length();
        boolean[][] dp = new boolean[n+1][m+1];
        
        // Base cases
        dp[0][0] = true; // Both strings are empty
        for (int i = 1; i <= n; i++) {
            if (p.charAt(i-1) == '*') { // All stars can match empty string
                dp[i][0] = dp[i-1][0];
            }
        }
        
        // Filling the table
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (p.charAt(i-1) == s.charAt(j-1) || p.charAt(i-1) == '?') { // If match found or '?' is found 
                    dp[i][j] = dp[i-1][j-1];
                }
                else if (p.charAt(i-1) == '*') { // If it is a '*'
                    dp[i][j] = dp[i-1][j] || dp[i][j-1];
                }
                else { // No match found
                    dp[i][j] = false;
                }
            }
        }
        return dp[n][m];