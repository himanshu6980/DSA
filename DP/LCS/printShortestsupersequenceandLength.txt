
 Length of the shortest supersequence  = (Sum of lengths of given two strings) - (Length of LCS of two given strings) 
eg : return (m+n) - t[m][n];

class Solution {
    public String shortestCommonSupersequence(String X, String Y) {
        int m = X.length();
        int n = Y.length();
        int[][] t = new int[m+1][n+1];
        
        for(int i=0;i<m+1;i++){
            for(int j =0;j<n+1;j++){
                if(i==0 || j==0){
                    t[i][j] =0;
                }
            }
        }
        
        for(int i=1;i<m+1;i++){
            
            for(int j=1;j<n+1;j++){
                
                if(X.charAt(i-1) == Y.charAt(j-1)){
                    t[i][j] = 1 + t[i-1][j-1];
                }
                else{
                    t[i][j] = Math.max(t[i-1][j] , t[i][j-1]);
                }
            }
        }
        
        String res="";
        
        int i=m;
        int j=n;
        
              while(i>0 && j>0){
            
            if(X.charAt(i-1) == Y.charAt(j-1)){
                res+=X.charAt(i-1);
                i--;
                j--;
            }
            else{
                if(t[i-1][j]>=t[i][j-1]){
                     res+=X.charAt(i-1);
                    i--;
                }
                else{
                       res+=Y.charAt(j-1);
                    j--;
                }
            }
        }
        
        while(i>0){
                  res+=X.charAt(i-1);
                    i--;
        }
        
          while(j>0){
                  res+=Y.charAt(j-1);
                    j--;
        }
        
            StringBuffer str = new StringBuffer(res);
        return str.reverse().toString();   
    }
}