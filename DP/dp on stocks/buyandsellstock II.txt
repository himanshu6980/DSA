tc: o(2n) SC:(2n)+o(n)


 public int maxProfit(int[] prices) {
        int[][] t = new int[prices.length][2];
        for(int i=0;i<t.length;i++){
            Arrays.fill(t[i],-1);
        }
        return f(0,1,prices,t);
    }

       int f(int index , int buy, int[] prices , int[][] t){

            if(index==prices.length){
                return 0;
            }

            if(t[index][buy] != -1){
                return t[index][buy];
            }

        if(buy==1){  //can buy
            return t[index][buy] = Math.max(-prices[index]+ f(index+1,0,prices,t) ,0+ f(index+1,1,prices,t) ); 
        }
        else{ //sell
             return t[index][buy] = Math.max(f(index+1,1,prices,t) + prices[index] , 0+ f(index+1,0,prices,t));
        }
    }