for N/2

import java.util.HashMap;
import java.util.Map;

public class Solution {
    public static int majorityElement(int []arr) {
        // Write your code here

        // HashMap<Integer,Integer> countMap=new HashMap<>();

        //  for (int num : arr) {
        //     countMap.put(num, countMap.getOrDefault(num, 0) + 1);
        // }


        //  int majorityCount = arr.length / 2;
        // for (Map.Entry<Integer, Integer> entry : countMap.entrySet()) {
        //     if (entry.getValue() > majorityCount) {
        //         return entry.getKey();
        //     }
        // }

        //  return -1;

        int ele=0;
        int cnt=0;

        for(int i=0;i<arr.length;i++){
            if(cnt==0){
                cnt=1;
                ele=arr[i];
            }
            else if(arr[i]==ele){
                cnt++;
            }
            else{
                cnt--;
            }
        }
		// Manually check  just for final validaton
        int cnt1=0;

        for(int i=0;i<arr.length;i++){
            if(arr[i]==ele){
                cnt1++;
            }
        }

        if(cnt1> arr.length/2){
            return ele;
        }

        return -1;

    }
}








for N/3


import java.util.*;
public class Solution {
    public static List< Integer > majorityElement(int []arr) {
        // Write your code here

        List<Integer> ans=new ArrayList<>();

        int cnt1=0;
        int cnt2=0;
        int ele1=Integer.MIN_VALUE;
        int ele2=Integer.MIN_VALUE;

        int n =arr.length;

        for(int i=0;i<n;i++){

            if(cnt1==0 && arr[i] != ele2){
                ele1=arr[i];
                cnt1=1;
            }
            else if(cnt2==0 && arr[i] != ele1){
                ele2=arr[i];
                cnt2=1;
            }

            else if(arr[i]==ele1){
                cnt1++;
            }
            else if (arr[i]==ele2){
                cnt2++;
            }
            else {
                cnt1--;
                cnt2--;
            }
        }

        int majority=(int) Math.floor((double)n /3);

        int finalcnt1=0;
        int finalcnt2=0;

        for(int i=0;i<n;i++){
            if(arr[i]==ele1){
                finalcnt1++;
            }
            if(arr[i]==ele2){
                finalcnt2++;
            }

        }

        if(finalcnt1>majority){
            ans.add(ele1);
        }
         if(finalcnt2>majority){
            ans.add(ele2);
        }

        Collections.sort(ans);

        return ans;

    
    }
}