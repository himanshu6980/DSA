class Solution {
    public int goodNodes(TreeNode root) {
        if (root == null) {
            return 0;
        }
        return countGood(root, root.val);
    }

    public int countGood(TreeNode node, int maxVal) {
        if (node == null) {
            return 0;
        }

        int count = 0;
        if (node.val >= maxVal) {
            count = 1; // This node is a "good" node.
            maxVal = node.val; // Update the maximum value seen so far.
        }

        // Recursively check left and right subtrees.
        count += countGood(node.left, maxVal);
        count += countGood(node.right, maxVal);

        return count; // Return the total count of good nodes in this subtree.
    }
}