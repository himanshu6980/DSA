Time Complexity: O(N) 

Space Complexity: O(1) Extra Space + O(H) Recursion Stack space, where “H”  is the height of the binary tree.

   public int maxDepth(TreeNode root) {
        if(root==null){
            return 0;
        }

        int lh=maxDepth(root.left);
          int rh=maxDepth(root.right);

          return 1+Math.max(lh,rh);
    }
	
	// 1 is more current node
	
	ietrtaive using level order
	
	
class Solution {
    public int maxDepth(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<>();
        if(root==null){
            return 0;
        }
        q.offer(root);

        int level=0;

        while(!q.isEmpty()){

            int qsize=q.size();

            for(int i=0;i<qsize;i++){
                TreeNode curr=q.poll();

                if(curr.left!=null){
                    q.offer(curr.left);
                }
                if(curr.right!=null){
                    q.offer(curr.right);
                }
            }
            level++;

        }
        return level;
    }
}