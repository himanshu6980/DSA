  public TreeNode buildTree(int[] inorder, int[] postorder) {
        
   HashMap<Integer,Integer> inmap=new HashMap<>();

        for(int i=0;i<inorder.length;i++){
            inmap.put(inorder[i],i);
        }

        TreeNode root= buildTree(postorder,0,postorder.length-1,inorder,0,inorder.length-1,inmap);

        return root;
    }

    public TreeNode buildTree(int[] postorder, int poststart, int postend , int[] inorder , 
    int instart,int inend, HashMap<Integer,Integer> inmap){


        if(poststart>postend || instart>inend){
            return null;
        }

        TreeNode root=new TreeNode(postorder[postend]);

        int inroot=inmap.get(postorder[postend]);

        int numsleft=inroot-instart;

        root.left=buildTree(postorder,poststart,poststart+numsleft-1,inorder,instart,inroot-1,inmap);

        root.right=buildTree(postorder,poststart+numsleft,postend-1,inorder,inroot+1,inend,inmap);

        return root;

    }