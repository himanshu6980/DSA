   public TreeNode bstFromPreorder(int[] preorder) {
        //approach 1 sort array to get inorder and create tree from inorder+preorder
        //tc: o(nlogn) + o(n) sc: o(n)

        //apporach 2

        // tc: o(n) sc: o(H) 

        if(preorder.length==0 || preorder==null){
            return null;
        }

        int[] idx=new int[]{0};

        //idx[0] will act as i

        return construct(preorder,idx,Integer.MIN_VALUE,Integer.MAX_VALUE);


    }


    public TreeNode construct(int[] preorder , int[] idx,int min,int max){

        if(idx[0]>=preorder.length || preorder[idx[0]] > max || preorder[idx[0]]< min ){
            return null;
        }

        int val=preorder[idx[0]];

        TreeNode root = new TreeNode(val);

        idx[0]++;

        root.left=construct(preorder,idx,min,val);
        root.right=construct(preorder,idx,val,max);

        return root;


    }